# 提示词管理系统需求文档

## 项目概述
开发一个现代化的提示词管理系统，帮助用户高效地创建、组织、测试和分享AI提示词。

## 核心功能需求

### 功能描述

- 管理后台导航分为左右两部分
- 左边菜单包含：
    - 作品管理：
        - 教程描述 (WorkGuide.vue)
        - 作品列表 (WorkList.vue) - 默认展示
        - 作品提示词配置 (WorkPrompt.vue)
    - 分类管理：
        - 添加分类 (CategoryAdd.vue)
        - 分类设置 (CategoryEdit.vue) - 默认展示
    - 用户管理：
        - 用户列表 (UserList.vue)
    - 系统管理：
        - 账号管理 (AccountManage.vue)
        - 角色管理 (RoleManage.vue)
- 右侧分为上下两部分
    - 上面：
        显示登录的用户头像，可以操作退出登陆状态
    - 下面：
        内容对应左侧导航的内容

### 账号管理 ✅ 已更新
- 效果如图 acct_manage.png
- 功能：用户账号的增删改查、状态管理、权限分配
- **新增特性**：
  - 现代化卡片布局设计
  - 个人信息和账户安全分区
  - 头像上传功能增强
  - 手机和邮箱验证状态显示
  - 响应式表单布局

### 分类列表 ✅ 已更新
- 分为如下两个部分：
    - 添加分类如图：group_add.png
    - 分类设置如图：group_edit.png
- 默认展示 分类设置
- 支持分类的层级结构、排序、描述管理
- **新增特性**：
  - 图标选择器功能
  - 树形分类选择器
  - 分类统计信息展示
  - 高级表单控件（开关、数字输入等）
  - 面包屑导航

### 登录注册 ✅ 已更新
- 登录/注册如图：login.png
- 支持JWT认证、用户状态管理
- **新增特性**：
  - 动态背景动画效果
  - 现代化登录表单设计
  - 增强的注册弹窗
  - 响应式布局优化
  - 图标和视觉元素增强

### 角色管理 ✅ 已更新
- 如图：role_manage.png
- 支持角色的权限配置、用户分配、角色描述
- **新增特性**：
  - 权限分组管理界面
  - 全选/部分选择权限控制
  - 角色状态管理
  - 用户数量徽章显示
  - 增强的操作按钮

### 用户列表 🔄 更新中
- 如图：user_list.png
- 支持用户的增删改查、角色分配、状态管理
- **新增特性**：
  - 高级搜索筛选功能
  - 批量操作支持
  - 用户状态管理增强
  - 角色分配优化
  - 导出功能

### 作品列表 ✅ 已更新
- 分为如下几个部分：
    - 教程描述如图：work_guide.png
    - 作品列表如图：work_list.png
    - 作品提示词配置如图：work_prompt.png
- 默认展示作品列表
- 支持作品的分类管理、标签系统、状态管理
- **新增特性**：
  - 高级搜索和筛选
  - 批量操作功能
  - 作品状态管理
  - 分类树形选择器
  - 增强的操作菜单
  - 作品信息展示优化

## 技术需求

### 前端技术栈
- **框架**: Vue.js 2.x (现代化SPA)
- **UI组件**: Ant Design Vue2
- **状态管理**: Vuex 3.x
- **路由**: Vue Router 3.x
- **构建工具**: Vite
- **样式**: SCSS + CSS变量

### 后端技术栈
- **语言**: Node.js
- **框架**: Express.js
- **数据库**: MySQL
- **认证**: JWT
- **中间件**: 
  - Helmet (安全)
  - CORS (跨域)
  - Rate Limiting (限流)
  - Body Parser (请求解析)

### 部署要求
- **容器化**: Docker + Docker Compose
- **环境配置**: dotenv
- **端口**: 前端 3000, 后端 8080

## 代码结构分析

### 前端结构
```
src/
├── api/           # API接口层
├── components/    # 公共组件
├── layout/        # 布局组件
├── router/        # 路由配置
├── store/         # Vuex状态管理
│   ├── modules/   # 状态模块
│   │   ├── user.js      # 用户状态
│   │   ├── works.js     # 作品状态
│   │   ├── categories.js # 分类状态
│   │   ├── users.js     # 用户管理状态
│   │   └── system.js    # 系统管理状态
├── styles/        # 全局样式
├── utils/         # 工具函数
└── views/         # 页面组件
```

### 后端结构
```
server/
├── app.js         # 主应用文件
├── config/        # 配置文件
├── routes/        # 路由文件
├── middleware/    # 中间件
├── models/        # 数据模型
└── utils/         # 工具函数
```

### 状态管理模块
- **user**: 用户认证、用户信息、角色管理
- **works**: 作品列表、分页、CRUD操作
- **categories**: 分类管理、层级结构
- **users**: 用户管理、权限分配
- **system**: 角色管理、权限配置

## 数据模型

### 用户模型
- id, username, email, role, status, avatar, createdAt, lastLogin

### 作品模型
- id, title, description, category, status, author, tags, createdAt

### 分类模型
- id, name, description, sortOrder, parentId, count, createdAt

### 角色模型
- id, name, description, permissions, userCount, createdAt

## 用户体验要求

### 界面设计
- **响应式设计**: 支持PC端
- **现代化UI**: 使用Ant Design Vue2组件库
- **一致性**: 统一的视觉风格和交互模式
- **新增要求**:
  - 卡片式布局设计
  - 动态背景效果
  - 图标和视觉元素增强
  - 响应式表单控件

### 性能要求
- **响应时间**: 页面加载 < 2秒，API响应 < 500ms
- **状态管理**: 使用Vuex进行集中状态管理
- **懒加载**: 路由级别的代码分割

## 安全要求

### 认证授权
- JWT token认证
- 基于角色的权限控制(RBAC)
- 请求限流保护

### 数据安全
- 输入验证和过滤
- SQL注入防护
- XSS防护

## 开发计划

### 第一阶段 (MVP) - 已完成 ✅
- ✅ 基础CRUD功能
- ✅ 简单分类系统
- ✅ 用户认证系统
- ✅ 角色权限管理
- ✅ 作品管理系统

### 第二阶段 - 进行中 🔄
- ✅ 高级编辑功能
- ✅ 现代化UI设计
- ✅ 响应式布局优化
- 🔄 协作功能
- 🔄 性能优化
- 🔄 移动端适配

### 第三阶段 - 计划中 📋
- 📋 AI智能功能
- 📋 高级分析
- 📋 企业级功能
- 📋 生态集成

## 开发规范

### 代码风格
- 使用ESLint + Prettier
- 遵循Vue.js官方风格指南
- 组件命名使用PascalCase
- 文件命名使用kebab-case

### Git规范
- 使用语义化提交信息
- 功能分支开发
- 代码审查流程

### 测试要求
- 单元测试覆盖率 > 80%
- 集成测试覆盖主要功能
- E2E测试覆盖关键用户流程

## 更新日志

### 2024年更新记录
- **登录页面**: 添加动态背景、现代化表单设计、增强的注册功能
- **账号管理**: 卡片式布局、个人信息和账户安全分区、头像上传增强
- **角色管理**: 权限分组管理、全选权限控制、角色状态管理
- **分类管理**: 图标选择器、树形分类选择器、分类统计信息
- **作品列表**: 高级搜索筛选、批量操作、状态管理增强
- **用户列表**: 高级搜索功能、批量操作支持、状态管理优化

### 设计改进
- 统一使用卡片式布局
- 增强的表单控件和验证
- 响应式设计优化
- 图标和视觉元素统一
- 操作按钮和菜单优化

- 集成测试覆盖主要功能
- E2E测试覆盖关键用户流程
