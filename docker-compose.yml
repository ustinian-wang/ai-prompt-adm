version: '3.8'

services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: ai-prompt-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: ai_prompt_admin
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./server/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./logs/mysql:/var/log/mysql  # MySQL日志持久化
    networks:
      - ai-prompt-network

  # 后端API服务
  web:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: ai-prompt-web
    restart: always
    ports:
      - "4002:4002"  # 后端暴露4002端口给外部
    environment:
      NODE_ENV: production
      PORT: 4002  # 设置后端服务端口为4002
      DB_HOST: mysql
      DB_USER: admin
      DB_PASSWORD: admin123
      DB_NAME: ai_prompt_admin
      DB_PORT: 3306
      JWT_SECRET: your-secret-key-here
    depends_on:
      - mysql
    networks:
      - ai-prompt-network
    volumes:
      - ./server/uploads:/app/uploads  # 上传文件持久化
      - ./logs/web:/app/logs      # 后端日志持久化
      - ./logs/pm2:/app/.pm2          # PM2日志持久化
      - ./server/data:/app/data       # 数据文件持久化
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 前端应用
  res:
    build:
      context: .
      dockerfile: Dockerfile.res
    container_name: ai-prompt-res
    restart: always
    ports:
      - "4001:4001"  # 前端暴露4001端口给外部
    depends_on:
      - web
    networks:
      - ai-prompt-network
    volumes:
      - ./logs/nginx:/var/log/nginx  # Nginx日志持久化

volumes:
  mysql_data:

networks:
  ai-prompt-network:
    driver: bridge
