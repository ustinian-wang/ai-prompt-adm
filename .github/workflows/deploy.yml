name: Deploy to GitHub Pages

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

# 设置权限
permissions:
  contents: read
  pages: write
  id-token: write

# 允许一个并发部署
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'yarn'
        
    - name: Install dependencies
      run: yarn install --frozen-lockfile
      
    - name: Build
      run: yarn build
      
    - name: Copy .nojekyll
      run: |
        cp public/.nojekyll dist/
        echo "✅ .nojekyll文件已复制到dist目录"
      
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './dist'
      
    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.TX_SVR_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.TX_SVR_HOST }} >> ~/.ssh/known_hosts
        
    - name: SSH to remote server
      run: |
        echo "TX_SVR_HOST: ${{ secrets.TX_SVR_HOST }}"
        echo "TX_SVR_USER: ${{ secrets.TX_SVR_USER }}"
        
        ssh ${{ secrets.TX_SVR_USER }}@${{ secrets.TX_SVR_HOST }} << 'EOF'
          echo "Hello from remote server!"
          echo "Current date: $(date)"
          echo "Server hostname: $(hostname)"
          # 在这里添加您需要在远程服务器上执行的命令
          cd /root/code/monorepo/ai-prompt-adm/ # 进入前端目录
          git pull # 拉取最新代码
          sh ./scripts/run.res.sh # 启动前端
          cd /root/code/monorepo/ai-prompt-adm/server # 进入后端目录
          sh ../scripts/run.web.sh # 启动后端
        EOF
